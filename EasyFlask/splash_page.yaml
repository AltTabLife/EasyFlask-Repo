#Welcome to the splash page for EasyFLask! This shows the capabilities in EasyFLask as a before and after.

#Full fledged 

#Need to add jinja and routes in following format order
#Jinja_Base: (format is "Jinja*args" for custom naming)
#  "/": (Double quotes shows flask route to be built)
#    html: (start of html)

#Jinja_Block: *arg (establishes the content of a jinja extension)
#Jinja_Include: *arg (establishes an include of a jinja file, using content to pass vars)
/:
  html:
    head:
      title: Splash Page
      meta:
        attributes:
          charset: utf-8
      #link:
      # attributes:
      #   rel: stylesheet
      #   href: link-to-css
    body:
      h1: Welcome to EasyFlask!
      p: EasyFlask is primarily meant to build an entire flask application through a simple config file, without having to learn or write a massive amount of syntax to get it up and running. This primarily uses a parser like seen in the config for this page for down to earth html coding without having to deal with before/end tags, element/attribute syntax. instead, this is a simple wiremap that takes care of the legwork on the backend.
      br:
      h2: Coming Capabilities
      p: While it only translates mostly direct HTML at the moment, this will be incorporating jinja2 blueprints to use multiple commonly paired tags and attributes in a snippet-like method, but allows you to lower the amount of typing required, not to mention lowering the brain overload.
      footer:
